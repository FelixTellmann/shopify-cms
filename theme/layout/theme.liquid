<!doctype html>
<html>
<head>
  {% include "_preflight-css" %}
  {{ content_for_header }}
</head>

<body style="position: relative;">
  {% section "global-settings" %}

  |||GLOBAL_SECTIONS_ABOVE_LAYOUT|||

  <div style="opacity: 0">
    {{ content_for_layout }}
  </div>

  |||GLOBAL_SECTIONS_BELOW_LAYOUT|||

  {% assign path = request.path %}
  {% if path == '/' %}
    {% assign path = "" %}
  {% endif %}

  {% if request.design_mode == false %}
    <iframe id="theme-editor"
            style="
            width: 100%;
            height: 100%;
            overflow: hidden;
            position: absolute;
            inset: 0;
            z-index: 10;
            min-height: 100vh"
            src="|||DEPLOYMENT_URL|||{{ path }}"
            frameborder="0">
    </iframe>

    <script>
      const developmentUrl = "|||DEVELOPMENT_URL|||"
      const vercelUrl = "|||DEPLOYMENT_URL|||"

      const sessionUrl = sessionStorage.getItem('shopify-cms-url') ?? "|||DEVELOPMENT_URL|||"
      const themeEditorIframe = document.getElementById("theme-editor");
      themeEditorIframe.setAttribute('src', `${sessionUrl}{{ path }}`)

      if (sessionUrl === developmentUrl) {
        fetch(`${developmentUrl}{{ path }}`, { method: "HEAD" }).catch(err => {
          themeEditorIframe.setAttribute('src', `${vercelUrl}{{ path }}`);
          sessionStorage.setItem('shopify-cms-url', vercelUrl)
        });
      }

      if (sessionUrl !== developmentUrl) {
        fetch(`${developmentUrl}{{ path }}`, { method: "HEAD" }).then((e) => {
          themeEditorIframe.setAttribute('src', `${developmentUrl}{{ path }}`);
          sessionStorage.setItem('shopify-cms-url', developmentUrl)
        }).catch(err => {
          sessionStorage.setItem('shopify-cms-url', vercelUrl)
        });
      }
    </script>

  {% endif %}

  {% if request.design_mode %}
    <iframe id="theme-editor"
            style="
            width: 100%;
            height: 100%;
            overflow: hidden;
            position: absolute;
            inset: 0;
            z-index: 10;
            min-height: 100vh"
            src="|||DEPLOYMENT_URL|||{{ path }}"
            frameborder="0">
    </iframe>

    <script>
      const developmentUrl = "|||DEVELOPMENT_URL|||"
      const vercelUrl = `|||DEPLOYMENT_URL|||`

      const sessionUrl = sessionStorage.getItem('shopify-cms-url') ?? developmentUrl
      const themeEditorIframe = document.getElementById("theme-editor");
      themeEditorIframe.setAttribute('src', `${sessionUrl}{{ path }}`)

      document.addEventListener('DOMContentLoaded', () => {
        if (sessionUrl === developmentUrl) {
          fetch('|||DEVELOPMENT_URL|||{{ path }}', { method: "HEAD" }).catch(err => {
            themeEditorIframe.setAttribute('src', `${vercelUrl}{{ path }}`);
            sessionStorage.setItem('shopify-cms-url', vercelUrl)
          });
        }

        if (sessionUrl !== developmentUrl) {
          fetch(`${developmentUrl}{{ path }}`, { method: "HEAD" }).then((e) => {
            themeEditorIframe.setAttribute('src', `${developmentUrl}{{ path }}`);
            sessionStorage.setItem('shopify-cms-url', developmentUrl)
          }).catch(err => {
            sessionStorage.setItem('shopify-cms-url', vercelUrl)
          });
        }


        let isInspectorMode = false;
        let sectionSizes = [];

        const JSONParse = (object) => {
          try {
            return JSON.parse(object);
          } catch (err) {
            if (err && typeof err === "object" && "message" in err) {
              console.log(err?.message);
            }

            return {};
          }
        };
        const parseShopifyData = (document) => {
          const globalSectionScripts = document.querySelector("[data-global]")?.textContent;
          const global = globalSectionScripts ? JSONParse(globalSectionScripts) : {};
          const sections = {};
          const sectionOrder = [];
          const globalSections = {};

          document.querySelectorAll("[data-section]").forEach((scriptElement) => {
            const section = JSONParse(scriptElement?.textContent ?? "");
            if (section.global) {
              globalSections[section.id] = section;
            }
            if (!section.global) {
              sections[section.id] = section;
            }
            sectionOrder.push(section.id);
          });

          return {
            ...global,
            linklists: global.linklists?.filter((linklist) => linklist),
            globalSections,
            sections,
            sectionOrder,
          };
        };

        themeEditorIframe.addEventListener('load', (e) => {
          themeEditorIframe?.contentWindow.postMessage({
              source: "theme-editor",
              topic: "activateThemeEditor",
              themeData: parseShopifyData(document)
            },
            "*",
          );
        });


        const resizeSections = () => {
          sectionSizes.forEach(({ id, height, blocks }) => {
            const sectionElement = document.getElementById(`shopify-section-${id}`);
            if (sectionElement) {
              sectionElement.style.position = 'static';
              sectionElement.style.height = `${height}px`;
            }
            blocks?.forEach(({ id, rect }) => {
              const blockElement = document.getElementById(`block--${id}`);
              if (blockElement && rect) {
                blockElement.style.width = rect.width + "px";
                blockElement.style.height = rect.height + "px";
                blockElement.style.top = rect.top + "px";
                blockElement.style.left = rect.left + "px";
                blockElement.style.bottom = rect.bottom + "px";
                blockElement.style.right = rect.right + "px";
              }
            });
          });
        };

        const sendThemeData = (e) => {
          themeEditorIframe?.contentWindow.postMessage({
              source: "theme-editor",
              topic: e?.type,
              detail: e?.detail,
              themeData: parseShopifyData(document)
            },
            "*",
          );
        };

        const shopifyEvents = [
          'shopify:inspector:activate',
          'shopify:inspector:deactivate',
          'shopify:section:load',
          'shopify:section:unload',
          'shopify:section:select',
          'shopify:section:deselect',
          'shopify:section:reorder',
          'shopify:block:select',
          'shopify:block:deselect',
        ];

        /*= =============== SEND UPDATES ================ */
        shopifyEvents.forEach(eventName => {
          document.addEventListener(eventName, (event) => {
            if (eventName === 'shopify:inspector:activate') {
              isInspectorMode = true;
              themeEditorIframe.style.zIndex = -10;
              resizeSections();
            }
            if (eventName === 'shopify:inspector:deactivate') {
              isInspectorMode = false;
              themeEditorIframe.style.zIndex = 10;
              resizeSections()
            }
            setTimeout(() => {
              sendThemeData(event);
              resizeSections()
            }, 15);

          });
        });

        /*= =============== RECEIVE UPDATES ================ */
        window.addEventListener('message', (e) => {
          if (e?.data?.source !== "theme-content") return;

          switch (e.data.topic) {
            case "resize" : {
              sectionSizes = e.data.sectionSizes;
              resizeSections()
              break;
            }
            case "set-iframe": {
              resizeSections();
              break;
            }
            case "redirect": {
              window.location.href = window.location.origin + e.data.href;
              break;
            }
          }
        });

      });
    </script>

  {% endif %}


</body>
</html>

